name: Crear tag aprobado y lanzar despliegue

on:
  workflow_dispatch:

jobs:
  tag-and-notify:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v4

      - name: Detectar último módulo modificado
        id: detectar
        run: |
          git fetch --depth=2 origin ${{ github.ref_name }} || true
          BASE_SHA=$(git rev-parse HEAD^ 2>/dev/null || echo "")
          HEAD_SHA=$(git rev-parse HEAD)
          echo "BASE_SHA=$BASE_SHA"
          echo "HEAD_SHA=$HEAD_SHA"
          if [ -z "$BASE_SHA" ]; then
            echo "No se pudo determinar el commit base. Abortando."
            exit 1
          fi
          MODULO=$(git diff --name-only $BASE_SHA $HEAD_SHA | cut -d/ -f1 | grep -v '^\.github$' | head -n1)
          if [ -z "$MODULO" ]; then
            echo "❌ No se detectó ningún módulo modificado."
            exit 1
          fi
          echo "Último módulo detectado: $MODULO"
          echo "modulo=$MODULO" >> $GITHUB_OUTPUT

      - name: Mostrar variables para depuración
        run: |
          echo "📦 Repositorio: ${{ github.repository }}"
          echo "🔖 Tag propuesto: ${{ steps.detectar.outputs.modulo }}-v0.0.${{ github.run_number }}"

      - name: Configurar Git
        run: |
          git config user.name "ci-bot"
          git config user.email "ci-bot@example.com"

      - name: Crear y subir tag
        env:
          GH_TOKEN: ${{ secrets.GH_PUSH_TOKEN }}
        run: |
          VERSION="${{ steps.detectar.outputs.modulo }}-v0.0.${{ github.run_number }}"
          git tag $VERSION
          git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }}.git
          git remote -v
          git push origin $VERSION
          echo "Tag creado: $VERSION"
          echo "version=$VERSION" >> $GITHUB_ENV

      - name: Notificar a Terragrunt
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.PAT_TERRAGRUNT }}
          repository: juancamilouni/terragrunt-infra
          event-type: deploy-module
          client-payload: '{"module": "${{ steps.detectar.outputs.modulo }}", "version": "${{ env.version }}"}'
